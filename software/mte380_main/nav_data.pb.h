/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_NAV_DATA_PB_H_INCLUDED
#define PB_NAV_DATA_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _NavData { 
    float posX; 
    float posY; 
    float posZ; 
    float velX; 
    float velY; 
    float velZ; 
    float accX; 
    float accY; 
    float accZ; 
    float angXy; 
    float angXz; 
    float angYz; 
    float angVelXy; /* angular velocity */
    float angVelXz; 
    float angVelYz; 
    float angAccXy; /* angular acceleration */
    float angAccXz; 
    float angAccYz; 
    float left; 
    float front; 
    float angFromWall; 
    uint32_t timestamp; 
    bool xValid; 
    bool yValid; 
} NavData;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define NavData_init_default                     {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define NavData_init_zero                        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define NavData_posX_tag                         1
#define NavData_posY_tag                         2
#define NavData_posZ_tag                         3
#define NavData_velX_tag                         4
#define NavData_velY_tag                         5
#define NavData_velZ_tag                         6
#define NavData_accX_tag                         7
#define NavData_accY_tag                         8
#define NavData_accZ_tag                         9
#define NavData_angXy_tag                        10
#define NavData_angXz_tag                        11
#define NavData_angYz_tag                        12
#define NavData_angVelXy_tag                     13
#define NavData_angVelXz_tag                     14
#define NavData_angVelYz_tag                     15
#define NavData_angAccXy_tag                     16
#define NavData_angAccXz_tag                     17
#define NavData_angAccYz_tag                     18
#define NavData_left_tag                         19
#define NavData_front_tag                        20
#define NavData_angFromWall_tag                  21
#define NavData_timestamp_tag                    22
#define NavData_xValid_tag                       23
#define NavData_yValid_tag                       24

/* Struct field encoding specification for nanopb */
#define NavData_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    posX,              1) \
X(a, STATIC,   SINGULAR, FLOAT,    posY,              2) \
X(a, STATIC,   SINGULAR, FLOAT,    posZ,              3) \
X(a, STATIC,   SINGULAR, FLOAT,    velX,              4) \
X(a, STATIC,   SINGULAR, FLOAT,    velY,              5) \
X(a, STATIC,   SINGULAR, FLOAT,    velZ,              6) \
X(a, STATIC,   SINGULAR, FLOAT,    accX,              7) \
X(a, STATIC,   SINGULAR, FLOAT,    accY,              8) \
X(a, STATIC,   SINGULAR, FLOAT,    accZ,              9) \
X(a, STATIC,   SINGULAR, FLOAT,    angXy,            10) \
X(a, STATIC,   SINGULAR, FLOAT,    angXz,            11) \
X(a, STATIC,   SINGULAR, FLOAT,    angYz,            12) \
X(a, STATIC,   SINGULAR, FLOAT,    angVelXy,         13) \
X(a, STATIC,   SINGULAR, FLOAT,    angVelXz,         14) \
X(a, STATIC,   SINGULAR, FLOAT,    angVelYz,         15) \
X(a, STATIC,   SINGULAR, FLOAT,    angAccXy,         16) \
X(a, STATIC,   SINGULAR, FLOAT,    angAccXz,         17) \
X(a, STATIC,   SINGULAR, FLOAT,    angAccYz,         18) \
X(a, STATIC,   SINGULAR, FLOAT,    left,             19) \
X(a, STATIC,   SINGULAR, FLOAT,    front,            20) \
X(a, STATIC,   SINGULAR, FLOAT,    angFromWall,      21) \
X(a, STATIC,   SINGULAR, UINT32,   timestamp,        22) \
X(a, STATIC,   SINGULAR, BOOL,     xValid,           23) \
X(a, STATIC,   SINGULAR, BOOL,     yValid,           24)
#define NavData_CALLBACK NULL
#define NavData_DEFAULT NULL

extern const pb_msgdesc_t NavData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define NavData_fields &NavData_msg

/* Maximum encoded size of messages (where known) */
#define NavData_size                             124

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
